% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/conditionalG.R
\name{conditionalG}
\alias{conditionalG}
\title{Computing a conditional sub matrix of G}
\usage{
conditionalG(G, condition_on = NULL)
}
\arguments{
\item{G}{A variance matrix (must be symmetric and positive definite).}

\item{condition_on}{Either an integer with the column number on which to
condition on or a vector with several column numbers (integers).}
}
\value{
A matrix that is a sub-matrix of G conditional on the non-included traits.
}
\description{
\code{conditinoalG} calculates a conditional variance matrix.
}
\details{
The function is motivated by the conditional evolvability, but in a
  multivariate setting. It can be used on any symmetric positive definite
  variance matrix. In the computation, the matrix `G` is first rotated so
  that all traits except for the sub-matrix of the traits specified by the
  `condition_on` vector, which is not rotated. Second, the
  \code{evolvabilityBeta} function is used to extract the conditional
  evolvabilities of the diagonal. This is stored as a diagonal matrix and the
  traits specified by the `condition_on` vector are removed before it is
  rotated back to the original trait space. The returned variance matrix is a
  sub-matrix of `G` that contain the variance that is independent of the
  traits specified by `condition_on`.
}
\examples{
# Constructing a G-matrix:
G <- matrix(c(
  1, 1, 0, 1,
  1, 2, 1, 1,
  0, 1, 2, 1,
  1, 1, 1, 3
), ncol = 4)

# Computing a conditional 2x2 sub-matrix by conditioning on trait 1 and 3:
G_sub_conditional <- conditionalG(G, condition_on = c(1, 3))

# The average evolvabilities of this matrix can then be compared can than be
# compared to the average evolvabilities of the corresponding unconditional
# sub matrix of G:
evolvabilityMeans(G_sub_conditional)
evolvabilityMeans(G[-c(1, 3), -c(1, 3)])
}
\author{
Geir H. Bolstad
}
\keyword{algebra}
\keyword{array}
